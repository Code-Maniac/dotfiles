- defaults:
    link:
        relink: true
        force: true

- clean: ['~']

- create:
    - ~/Downloads
    - ~/Downloads
    - ~/projects
    - ~/.antigen
    - ~/.config
    - ~/.config/kitty
    - ~/.config/nvim
    - ~/.tmux
    - ~/.tmux/plugins
    - ~/.vim/undo-history
    - ~/.local/share/nvim/backup//
    - ~/.oe
    - ~/.oe/downloads
    - ~/.oe/sstate-cache

- omnipkg-update: true
- omnipkg-install: [
    # if on fedora then enable the rpmfusion free and non-free repos
    https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm,
    https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm,
    g++,
    [ python3, python ],
    [ python3-pip, python-pip ],
    kitty,
    tmux,
    zsh,
    vim,
    neovim,
    curl,
    npm,
    ripgrep,
    git,
    autoconf,
    cmake,
    gnome-tweak-tool,
    bmap-tools,
    fzf,
    aespipe,
    thefuck,
    kernel-devel,
    kernel-headers-$(uname -r),
    akmod-nvidia,
    xorg-x11-drv-nvidia-cuda,
    mesa-libGL-devel,
    mesa-libGLU-devel,
    ffmpeg-libs,
    screen]
- omnipkg-upgrade: true

- shell:
    - [curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim, Installing vim-plug]
    - [sh -c 'curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim', Installing vim-plug for neovim]
    - [curl -L git.io/antigen > ~/.antigen/antigen.zsh, Installing antigen]
    - [sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)", Installing oh-my-zsh]
    - [./gen-ssh-keys, Generate ssh keys]
    - [curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y, Install Rust]
    - [cargo install bat, Install bat]
    - [cat oe/site.conf.sed | sed 's@~@'"$HOME"'@g' > oe/site.conf, Replace ~ in yocto site.conf]
    - [rm -f vim/wakatime.cfg, Remove existing wakatime.cfg]
    -
      command: cd vim && ./decrypt-wakatime && ln -sf vim/wakatime.cfg ~/.wakatime.cfg
      description: Decrypt wakatime api-key
      stdin: true
      stdout: true

# Link wakatime.cfg before running nvim to get plugins - otherwise it hangs due to prompt for key
- link:
    ~/.wakatime.cfg: vim/wakatime.cfg

# Now run PlugInstall on nvim
- shell:
  - [nvim --headless +PlugInstall +qa, Get vim plugins]

- sudo:
  - shell:
    - [lsp/install-language-servers, Installing language servers]
    - [scripts/install_scripts, Installing scripts]
    - [curl https://commondatastorage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo && chmod 755 /usr/local/bin/repo, Install Repo]

- link:
    ~/.config/kitty/kitty.conf: kitty/kitty.conf
    ~/.config/kitty/Dracula.conf: kitty/kitty-themes/themes/Dracula.conf
    ~/.zshrc: zsh/zshrc
    ~/.tmux.conf: tmux/tmux.conf
    ~/.tmux/plugins/tpm: tmux/tpm
    ~/.vimrc: vim/vimrc
    ~/.config/nvim/init.vim: vim/init.vim
    ~/.config/nvim/plugins: vim/plugins
    ~/.fonts: fonts
    ~/.config/pycodestyle: config/pycodestyle
    ~/.gitconfig: git/gitconfig
    ~/.config/bat: bat
