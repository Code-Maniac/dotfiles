# export useful information
export DOTFILES=/home/$USER/.dotfiles
# vim path information
export VIMRC=${DOTFILES}/vim/init.vim
export VIMPLUGINS=${DOTFILES}/vim/plugins
# zsh path information
export ZSHRC=${DOTFILES}/zsh/zshrc
# tmux path information
export TMUXRC=${DOTFILES}/tmux/tmux.conf
# kitty path information
export KITTYRC=${DOTFILES}/kitty/kitty.conf

# get a path file based on the OSTYPE
if [[ ${OSTYPE} == 'darwin'* ]]; then
  PATH_APPEND='darwin'
elif grep -q Microsoft /proc/version; then
  PATH_APPEND='linux-wsl'
else
  PATH_APPEND=${OSTYPE}
fi

export PATHFILE=${DOTFILES}/zsh/path-${PATH_APPEND}
if [ -r "${PATHFILE}" ]; then
  # if the path file exists
  # export path based on what in the path file
  # Removes leading and trailing white space
  # Ignores any line beginning with #
  # Ignores empty lines
  # I currently have plans to work this further into a common path file +
  # a system specific path file
  PATH+=$(cat ${PATHFILE} | sed -e 's/^[ \t]//' | sed -e 's/[ \t]*$//' | sed -e '/^$/d' | grep -v '^#' | tr '\n' ':')
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# load plugin manager and oh-my-zsh
source ~/.antigen/antigen.zsh
antigen use oh-my-zsh

# theme
antigen theme romkatv/powerlevel10k

# plugins
antigen bundle python
antigen bundle rust
antigen bundle golang
antigen bundle docker
antigen bundle history
antigen bundle sudo
antigen bundle man

# antigen is finished
antigen apply

# if on mac add an alias for nproc
if [[ ${OSTYPE} == 'darwin'* ]]; then
  alias nproc="sysctl -n hw.ncpu"
fi

# instead of using cp use rsync instead
if hash rsync &> /dev/null
then
    alias cp="rsync -avz"
fi

# if nvim is installed then use it instead of vim
if hash nvim &> /dev/null
then
    NVIM="nvim"
    alias vi=${NVIM}
    alias vim=${NVIM}

    # set nvim to the default editor
    export EDITOR=${NVIM}
    export VISUAL=${NVIM}
fi

# add symlinks for working with python
if hash python &> /dev/null
then
  alias py="python"
fi
if hash python3 &> /dev/null
then
  alias py3="python3"
fi

# if vimcat is installed then add ccat alias
if hash vimcat &> /dev/null
then
  alias ccat="vimcat"
fi

# add additional functionality to the make command if cargo is installed
# if in a rust project directory then resolve make as cargo build instead of
# make. Otherwise just resolve as make
function cargomake() {
  if cargo check &> /dev/null
  then
    cargo build $@
  else
    make $@
  fi
}
if hash cargo &> /dev/null
then
  alias make="cargomake"
fi

# add bitbake, recipetool and devtool alias'
alias bb="bitbake"
alias bbl="bitbake-layers"
alias rp="recipetool"
alias dt="devtool"

# for accidental vim commands in terminal
alias :q='echo You are not editing a file, dummy'
alias :wq='echo You are not editing a file, dummy'

# colored man pages
export LESS_TERMCAP_mb=$'\e[1;32m'
export LESS_TERMCAP_md=$'\e[1;32m'
export LESS_TERMCAP_me=$'\e[0m'
export LESS_TERMCAP_se=$'\e[0m'
export LESS_TERMCAP_so=$'\e[01;33m'
export LESS_TERMCAP_ue=$'\e[0m'
export LESS_TERMCAP_us=$'\e[1;4;31m'

# add alias for thefuck
eval "$(thefuck --alias fuck)"

# add fzf into the mix
[[ ! -f ${DOTFILES}/zsh/fzf.zsh ]] || source ${DOTFILES}/zsh/fzf.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# finally if we are not in tmux session then make a new one
if [ "$TMUX" = "" ]; then tmux attach || tmux new; fi
